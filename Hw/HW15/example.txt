# example for multi table inheritance

class User(models.Model):
    MALE = 'ML'
    FEMALE = 'FL'
    NOTSET = 'NT'
    GENDER_CHOICES = [(MALE, 'male'),(FEMALE, 'female'),(NOTSET, 'notset')]
    name = models.CharField('name of user', max_length=50)
    address = models.CharField('address of user', max_length=600)
    email = models.EmailField('email of user', max_length=254)
    gender = models.CharField(max_length=2, choices=GENDER_CHOICES)
    phone_number = models.CharField('phone_number', max_length=14, unique=True)
    date = models.DateTimeField('date who user joined', auto_now_add=True)
    favorite = models.ForeignKey("feature.Favorite", on_delete=models.SET_NULL, null=True, blank=True, related_name='fav_user')


class Buyer(User):
    card = models.CharField('address of user', max_length=600)


class Seller(User):
    verified = models.BooleanField()



# example for proxy model inheritance

class MyModel(models.Model):
    name = models.CharField(max_length=100)

    def __str__(self):
        return self.name

class UpperModel(MyModel):
    class Meta:
        proxy = True

    def __str__(self):
        return self.name.upper()


class FeatureStory(MyModel):
    objects = FeatureManager()
    class Meta:
        proxy = True

class InfographicStory(MyModel):
    objects = InfographicManager()
    class Meta:
        proxy = True

